// Todo : 범위 지정 열거형 enum
// 열거형은 C++98 에서도 사용되었지만 C++11 부터 범위 지정 열거형(scoped enum) 이 추가되었습니다.
// 기존 열거형도 C++11 에서 변경된 부분이 있습니다.

// 가장 큰 변화는 열거한 데이터의 형식을 지정할 수 있다는 점입니다
// 이전 코드와 호환성을 보장하고자 데이터 형식을 지정하지 않으면 정수형으로 자동 지정됩니다.

// 범위 지정 열거형을 사용할 때는 선언된 범위를 반드시 지정해 주어야 합니다. 범위 미지정 열거형은 선언 범위를 명시하지 않아도 사용할 수 있기 때문에
// 선언된 곳을 알 수 없을 뿐더러 같은 열거형 식별자를 사용했을 때에 혼란을 줄 수 있스빈다.

//! 선언 방식 class (값 없음 , 'b' , 'c' 로 초기화)
enum class monster_num : char{monster_a_type , moster_b_type = 'b' , monster_c_type = 'c'};

//! 선언 방식 struct (1,2,3 으로 초기화)
enum struct monster_num {monster_a_type , moster_b_type , monster_c_type};

//! 범위 미지정 열거형 선언(1 , 2, 10 으로 초기화)
enum weapon_enum {gun_type , machine_gun_type , arrow_type = 10};

// 1. 범위 지정 열거형 선언은 enum 키워드 다음에 class 또는 struct 를 사용하면 범위 지정 열거형이됩니다.
// 2. 범위 미지정 열거형 선언은 범위 지지정 열거형 선언에서 class 또는 struct를 사용하지 않고 선언합니다. 
// 3. 열거형 데이터 형식 지정 : 열거형 선은 다음에 쌍점을 적고 열거한 값의 데이터 형식을 지정할 수 있습니다.
// 4. 식별자 값 부여 : 소스 코드에서는 열거한 식별자 자체를 상수로 사용하므로 값을 반드시 지정할 필요가 없습니다. 