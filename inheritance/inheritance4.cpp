// Todo : 상속을 위한 조건
// Todo : 상속을 위한 기본 조건인 IS-A 관계의 성립
// 상속의 기본 문법에서 보이듯이, 유도 클래스는 기초 클래스가 지니는 모든 것을 지니고 , 거기에다가 유도 클래스만의 추가적인 특성이 더해지낟.
// 그렇다면 현실 세계에서는 이러한 상황이 언제 연출될까?

// 전화기 -> 무선 전화기
// 컴퓨터 -> 노트북 컴퓨터

// 무선 전화기는 일종의 전화기입니다.
// 노트북 컴퓨터는 일종의 컴퓨터입니다.

// 무선 전화기 is a 전화기
// 노트북 컴퓨터 is a 컴퓨터

// 즉, 상속관계가 성립하려면 기초 클래스와 유도 클래스간의 IS-A 관계가 성립되어야 한다.

// Todo : HAS-A 관계도 상속의 조건은 되지만 복합 관계로 이를 대신하는 것이 일반적이다
// "이는 바로 '소유'의 관계이다."

// 상속으로 묶인 두 개의 클래스는 강한 연관성을 띈다. 즉, Gun 클래스를 상속하는 Police 클래스로는 총을 소유하는 경찰만 표현이 가능하다.
// 한마디로 HAS-A 관계 표현에도 상속의 경우가 사용될 수 있으나, 이는 프로그램의 변경에 많은 제약을 가져다 줄 수 있다.